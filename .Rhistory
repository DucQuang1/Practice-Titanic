hist(Bikeshare$Start.station,freq = TRUE)
hist(count(Bikeshare$Start.station))
help("count")
??count
help(xtabls)
help(xtabs)
barplot(xtabs (~Start.station,data = Bikeshare))
xtabs (~Start.station+End.station,data = Bikeshare)
plot (Start.station ~End.station, data = Bikeshare, ylab = "Start station",xlab = "End station")
??omit data
help.search("omit data")
summary(Bikeshare$Start.station)
help.search("count")
count.fields(Bikeshare)
number(Bikeshare$Start.station)
help(aggregate)
length(Bikeshare$Start.station)
unique(Bikeshare$Start.station)
length(unique(Bikeshare$Start.station))
Startstation <- Bikeshare$Start.station
length (Startstation$11th & Kenyon St NW (31102))
length (Startstation$(11th & Kenyon St NW (31102))
length (Startstation$("11th & Kenyon St NW (31102)"))
length (Startstation$"11th & Kenyon St NW (31102)")
Startstation
Summary(Startstation)
summary(Startstation)
Bikeshare
help(barplot)
help($)
BikeshareCt <- read.csv ("C:/DMBA/CitiBike14Aug.csv", header = TRUE, sep = ",")
View(BikeshareCt)
length(unique (BikeshareCt$bikeid))
lenght(unique(BikeshareCt$start.station.name))
length(unique(BikeshareCt$start.station.name))
help(barplot)
station <- BikeshareCt$start.station.name
station
length(station)
name <- unique(station)
name[1]
name[1] - name[2]
stringname <- c(name[1],name[2],name[3],name[4])
name[1]
barplot (xtabs~ start.station.name,names.arg = stringname,data =BikeshareCt)
stringname
help(c)
name[1]
"name[1]"
stringname <- c(as.string(name[1]))
is.character(name[1])
help(ggplot)
help(ggplot2)
View(BikeshareCt)
View(prostate)
station
station <- as.character(BikeshareCt$start.station.name)
station
station [1]
namestring <- c(station[1],station[2])
namestring [1]
barplot(xtabs(~start.station.name,data = BikeshareCt))
barplot(xtabs(~start.station.name,data = BikeshareCt), names.arg = namestring)
help(barplot)
xtabs
xtabs
help(xtabs)
barplot(xtabs(~start.station.name,data = BikeshareCt,subset=namestring))
xtabs
help(xtabs)
xtabs(~start.station.name,data = BikeshareCt,subset=namestring)
help(xtabs)
help(barplot)
barplot(station)
barplot(xtabs(~station, data = BikeshareCt))
help(subset)
help(mydata)
myvars <- c("v1", "v2", "v3")
newdata <- mydata[myvars]
help(xtabs)
Bikesubset <- subset (BikeshareCt, start.station.name %in% namestring)
barplot(xtabs(~start.station.name,data = Bikesubset))
barplot(xtabs(~ namestring,data = Bikesubset))
View(Bikesubset)
View(Bikesubset)
xtabs(~start.station.name , data = Bikesubset)
start.station.subset <- subset (start.station.name , select = namestring )
barplot
help(barplot)
help(xtabs)
xtabs(~start.station.name, subset = namestring, data= Bikesubset)
xtabs(~start.station.name, data= Bikesubset)
help(qplot)
??qplot
library(ggplot2)
help(qplot)
length(Bikesubset)
width(Bikesubset)
length(Bikesubset$start.station.name)
help(table)
endstation <- table(BikeshareCt$end.station.id)
endstation [1]
endstation[2]
endstation
endstation <- table(BikeshareCt$end.station.name)
endstation[1]
endstation[0]
endstation[2]
barplot(endstation)
help(table)
summary(endstation)
endstation[1]
endstation(endstation >15000)
endstation[endstation >15000]
help(with)
endstation[endstation >500]
endstation[endstation > 5000]
barplot(endstation[endstation > 6000])
barplot (endstation (names(endstation) == namestring))
barplot (endstation [names(endstation) == namestring])
endstation[1]
names(endstation[1])
count (endstation[1])
endstation [1]
names(endstation[2])
station <- unique(station )
station <- names (endstation)
station [1]
station[2]
station[3]
station[4]
namestring <- c (station[1:40])
barplot(endstation [names(endstation) == namestring])
namestring <- c(station [1:20])
barplot(endstation [names(endstation) == namestring])
clear(namestring)
delete(namestring)
remove(namestring)
namestring <- c (station[1:10])
barplot(endstation [names(endstation) == namestring])
endstation [10]
library(ggplot2)
str(mpg)
??winnebago
summary(BikeshareCt)
set.seed(1)
x <- rnorm (100)
help(rnorm)
log.mu <- 0.5 +0.3*x
y <- rpois (100,exp (log.mu))
summary(y)
plot(x,y)
library(datasets)
head(airquality)
airquality
str(airquality)
m <- matrix (rnorm(100),10,10)
str(m)
m[,1]
s <- split (airquality , airquality$month)
s <- split (airquality , airquality$Month)
str(s)
library(datasets)
install.packages("swirl")
library(swirl)
ls
ls()
rm(list=ls())
swirl()
install_from_swirl("Data Analysis")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Regression Models")
swirl()
plot(child~parent,galton)
plot(fitter(child,4)~parent,galton)
plot(jitter(child,4)~parent,galton)
install_from_swirl("Open Intro")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Statistical Inference")
swirl()
swirl()
swirl()
swirl()
library(swirl)
ls()
rm(list = ls())
library(swirl)
swirl()
5
5+7
swirl()
5+7
x <- 5 +6
x <- 5 + 7
x v
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
z+555+z
c(z,555,z)
z*2 +100
my_sqrt <- sqrt(z-1)
my_aqrt
my_sqrt
mydiv <- z/my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 +1000
my_div
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10,replace = TRUE)
sample(1:10,replace = TRUE)
sample(1:10,replace = TRUE)
set.seed(1)
sample(1:10,replace = TRUE)
set.seed(1)
sample(1:10,3)
set.seed(10)
set.seed(1)
sample(1:10,4)
set.seed(10)
sample(1:10,4)
library(swirl)
swirl()
regline <- lm(child ~parent,galton)
regrline <- lm(child ~parent,galton)
abline(regrline,lwd =3,col='red')
summary(regrline)
swirl()
coinPlot(10)
coinPlot(10000)
help("qnorm")
qnorm(p)
swirl()
library()
library(swirl)
rm(list = ls())
swirl()
all <- lm(Fertility ~ Agriculture + Examination + Education +Catholic + Infant.Mortality,data = swiss)
summary(all)
summary(lm(Fertility~Agriculture))
summary(lm(Fertility~Agriculture,data = swiss))
??cor
help(cor)
cor (Education,Examination,data= swiss)
cor (Education,Examination)
cor(swiss$Education,swiss$Examination)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ all +ec,data= swiss)
efit <- lm(.+ec,data= swiss)
efit <- all + ec
efit <- lm(Fertility ~ .+ec,data=swiss)
??
coeff
help(coeff)
0
all$coefficients - efit$coefficients
q()
rm(list=  ls())
library(swirl)
swirl()
all <- lm(Feritility~.,data = swiss)
all <- lm(Fertitility~.,data = swiss)
all <- lm(Fertility~.,data = swiss)
summary(all)
summary(lm(Fertility~Agriculture,data = swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination +swiss$Catholic
efit <- lm(Fertility ~.+ec,data= swiss)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
help(head)
head(InsectSprays,15)
sA
summary(InsectSprays[,2])
;l
help(sapply)
sapply(InsectSprays[,2],class)
sapply(InsectSprays,class)
fit <- lm(count~spray,data= InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
View(InsectSprays)
View(InsectSprays)
View(InsectSprays)
mean(sA)
mean(sprayB)
mean(sB)
nfit <- lm(count ~spray-1)
nfit <- lm(count ~spray-1,data= InsectSprays)
summary(nfit)$coef
spray2 <- relevel (InsectSpray$spray,C)
spray2 <- relevel (InsectSprays$spray,C)
spray2 <- relevel (InsectSprays$spray,"C")
fit2 <- lm(count ~ spray2)
fit2 <- lm(count ~ spray2,data= InsectSprays)
summary(fit2)
summary(fit2)$coef
mean(sC
)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
nfit2 <- lm(count ~ spray2-1,data =InsectSprays)
summary(nfit2)
swirl()
dim (hunger)
948
names (hunger)
fit <- lm(Numeric ~ Year, data= hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, data = hunger$Sex =="Female")
lmF <- lm(Numeric ~ Year, data = (hunger$Sex =="Female")
)
lmF <- lm(Numeric[hunger$sex =="Female"] ~ Year[hunger$sex =="Female"], data = hunger)
asd;mlads
lmF <- lm(Numeric ~Year, data= hunger)
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex == "Male"]~Year[Sex=="Male"],hunger)
lmM <- lm(Numeric[Sex == "Male"]~Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~Year +Sex,hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y~x,out2)
plot(fit,which =1)
fitno <- lm(y~x,out2[-1,])
plot(fitno,which =1)
coef (fitno) - coef (fit)
coef(fit)-coef(fitno)
view(dfbeta(fit))
head(dfbeta(fit))
out2[1,]
resno <- out2[1,"y"] - preduct(fitno,out2[1,])
resno <- out2[1,"y"] - predict(fitno,out2[1,])
1 - resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt (resid(fit)[1]/50)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- sigma * sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandard(fit)))
help(cbind)
plot(fit,which =3)
plot(fit,which =2)
sigma1 <- sqrt(deviance(fitno)/df.residual (fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
swirl()
library(swirl)
rm(list= ls())
library(swirl)
swirl()
library(datasets)
data(cars)
with(cars,plot(seed,dist))
with(cars,plot(speed,dist))
library(lattice)
data(state)
state <- data.frame (state.x77, region = state.region)
xyplot (Life.Exp~ Income | region, data= state, layout = c(4,1))
help(xyplot)
library(ggplot2)
data (mpg)
qplot(displ, hwy, data = mpg)
library(datasets)
hist (airquality$Ozone)
with (airquality , plot(Wind, Ozone))
airquality <- transform  (airquality ,Month = factor(Month))
boxplot (Ozone ~ Month, airquality , xlab= "Month", ylab = "Ozone(ppb)")
par()
par()
par("lty")
par("col")
par("mar")
library(dplyr)
summary(train$Sex)
test <- read.csv("C:/DMBA/Kaggle/Titanic/test.csv")
View(test)
train <- read.csv("C:/DMBA/Kaggle/Titanic/train.csv")
View(train)
summary(train$Sex)
summary(test$Survived)
table (train$Sex, train$Survived)
table(table(train$Sex, train$Survived))
prop.table(table(train$Sex,train$Survived))
prop.table(table(train$Survived))
help(prop.table)
table(train$Sex, train$Survived, train$Age)
summary(train$Sex)
prop.table(table(train$Sex,train$Survived))
prop.table(table(train$Sex,train$Survived),1)
test$Survived <- 0
test$Survived [test$Sex == ]
test$Survived [test$Sex == "female"] <- 1
View(test)
summary(train$Age)
train$Child  <- 0
train$Child [train$Age < 18] <- 1
View(train)
aggregate (Survived ~ Child + Sex, data = train, FUN= sum)
aggregate (Survived ~Child + Sex, data = train , FUN = function(x){sum(x)/length(x)})
train$Fare2 <- '30+'
train$Fare2 [train$Fare < 30 & train$Fare >= 20] <-
'20-30'
train$Fare2 [train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2 [train$Fare <10 ] <- '10'
train$Fare2 [train$Fare <10 ] <- '<10'
aggregate (Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
train$Fare2 [train$Fare <10 ] <- '< 10'
aggregate (Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
plot (Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
barplot (Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
plotx <- Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)}
plotx <- aggregate (Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
plot(plotx)
View(plotx)
plotxy <- c (plotx$Fare2, plot$Survived)
plotxy <- c (plotx$Fare2, plotz$Survived)
plotxy <- c (plotx$Fare2, plotx$Survived)
plot(plotxy)
barplot(plotxy)
help(plot)
help(qplot)
library(ggplot2)
help(qplot)
qplot(plotx$Fare2,plotx$Survived)
qplot(plotx$Fare2[plotx$Sex == 'female'],plotx$Survived[plotx$Sex == 'female'])
qplot(plotx$Fare2[plotx$Sex == 'male'],plotx$Survived[plotx$Sex == 'male'])
help(qplot)
plotxy
help(qplot)
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit)
train$Name[1]
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit)
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
help(fancyRpartPlot)
??clear
#models with Gender-class
summary(train$Sex)
summary(test$Sex)
prop.table(table(train$Sex,train$Survived))
prop.table(table(train$Sex,train$Survived),1)
library(rpart)
help(predict)
help(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit)
library(rattle)
fancyRpartPlot(fit)
Prediction <- predict(fit,test,type ="class")
head(Prediction)
submit <- data.frame(PassengerId = test$PassengerId,Survived = Prediction)
write.csv (submit , file = "myfirstdtree.csv",row.names = FALSE)
View(train)
View(plotx)
combi
View(test)
rm (test)
rm(train)
test <- read.csv("C:/DMBA/Kaggle/Titanic/test.csv")
View(test)
train <- read.csv("C:/DMBA/Kaggle/Titanic/train.csv")
View(train)
test$Survived <- NA
combi <- rbind (train,test)
setwd ("C:/Users/Martin ")
setwd ("C:/Users/Martin Nguyen/Documents/GitHub/Practice-Titanic")
library(Swirl)
library(swirl)
View(combi)
?diamon
?diamond
library(caret)
??diamond
data(diamond)
library(UsingR)
data(diamond)
y <- diamond$price
x <- diamond$carat
n <- length(y)
fit <- lm(y~x)
e <- resid (fit)
yhat <- predict (fit)
max (abs(e - (y-yhat)))
